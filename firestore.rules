rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Allow admin users to read/write test collection
    match /testCollection/{document=**} {
      allow read, write: if isAdmin();
    }

    // Allow public read access to all documents
    match /{document=**} {
      allow read: if true;
      allow write: if false;
    }
    
    // Allow authenticated users to write to their own user document
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow public read access to QR codes
    match /qrCodes/{qrCodeId} {
      allow read: if request.auth != null;
      allow create: if isAdmin();
      allow update: if isAdmin() || 
        (request.auth != null && 
         resource.data.userId == request.auth.uid);
      allow delete: if isAdmin();
    }

    // Restrict admin-related data to admin users only
    match /admin/{document=**} {
      allow read, write: if request.auth != null && request.auth.token.admin == true;
    }
  }
} 